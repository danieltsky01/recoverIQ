rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() { return request.auth != null; }
    // Admins are defined by the presence of a document at /admins/{uid}
    function isAdmin() { return isSignedIn() && exists(/databases/$(database)/documents/admins/$(request.auth.uid)); }

    // Hospital portfolio docs
    match /hospitals/{id} {
      allow read: if isSignedIn();
      allow create, update, delete: if isAdmin();
    }

    // Per-user profile
    match /users/{uid} {
      allow read, write: if isSignedIn() && request.auth.uid == uid;
    }

    // Presence: who is viewing which hospital
    match /presence/{hospitalId}/{uid} {
      allow read: if isSignedIn();
      allow write: if isSignedIn() && request.auth.uid == uid;
    }

    // Config documents like scoring weights
    match /config/{docId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    // Admin membership list (read only by admins)
    match /admins/{uid} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }

    // Deny everything else by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}